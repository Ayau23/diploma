openapi: 3.0.3
info:
  title: Diploma API
  version: 1.0.0
  description: SUIIIIIIIIII
paths:
  /api/client/login/:
    post:
      operationId: client_login_create
      description: Method providing user login
      tags:
      - client
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientLogin'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ClientLogin'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ClientLogin'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientLogin'
          description: ''
  /api/client/register/:
    post:
      operationId: client_register_create
      tags:
      - client
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ClientCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ClientCreate'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientCreate'
          description: ''
  /api/clients/:
    get:
      operationId: clients_list
      tags:
      - clients
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Client'
          description: ''
    post:
      operationId: clients_create
      tags:
      - clients
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Client'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Client'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Client'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
          description: ''
  /api/clients/{id}/:
    get:
      operationId: clients_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - clients
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
          description: ''
    put:
      operationId: clients_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - clients
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Client'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Client'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Client'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
          description: ''
    patch:
      operationId: clients_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - clients
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedClient'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedClient'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedClient'
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
          description: ''
    delete:
      operationId: clients_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - clients
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/clients/me/:
    get:
      operationId: clients_me_retrieve
      tags:
      - clients
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
          description: ''
  /api/companies/:
    get:
      operationId: companies_list
      tags:
      - companies
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Company'
          description: ''
    post:
      operationId: companies_create
      tags:
      - companies
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Company'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Company'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Company'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
          description: ''
  /api/companies/{id}/:
    get:
      operationId: companies_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - companies
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
          description: ''
    put:
      operationId: companies_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - companies
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Company'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Company'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Company'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
          description: ''
    patch:
      operationId: companies_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - companies
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCompany'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCompany'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCompany'
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
          description: ''
    delete:
      operationId: companies_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - companies
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/companies/me/:
    get:
      operationId: companies_me_retrieve
      tags:
      - companies
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
          description: ''
  /api/company/login/:
    post:
      operationId: company_login_create
      description: Method providing user login
      tags:
      - company
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompanyLogin'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CompanyLogin'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CompanyLogin'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyLogin'
          description: ''
  /api/company/register/:
    post:
      operationId: company_register_create
      tags:
      - company
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompanyCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CompanyCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CompanyCreate'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyCreate'
          description: ''
  /api/logout/:
    post:
      operationId: logout_create
      tags:
      - logout
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Logout'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Logout'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Logout'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Logout'
          description: ''
  /api/profile/{id}:
    get:
      operationId: profile_list
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - profile
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Profile'
          description: ''
    post:
      operationId: profile_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - profile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Profile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Profile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Profile'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
          description: ''
    put:
      operationId: profile_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - profile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Profile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Profile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Profile'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
          description: ''
    patch:
      operationId: profile_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - profile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProfile'
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
          description: ''
  /api/schema/:
    get:
      operationId: schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - schema
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /api/token/:
    post:
      operationId: token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /api/token/refresh/:
    post:
      operationId: token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/user/favorite/list/:
    get:
      operationId: user_favorite_list_list
      tags:
      - user
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Favorite'
          description: ''
  /api/vacancy/{id}:
    get:
      operationId: vacancy_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - vacancy
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vacancy'
          description: ''
  /api/vacancy/{id}/like/:
    post:
      operationId: vacancy_like_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - vacancy
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          description: No response body
  /api/vacancy/{id}/response/:
    post:
      operationId: vacancy_response_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - vacancy
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          description: No response body
  /api/vacancy/create/:
    post:
      operationId: vacancy_create_create
      tags:
      - vacancy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VacancyCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VacancyCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VacancyCreate'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VacancyCreate'
          description: ''
  /api/vacancy/list/:
    get:
      operationId: vacancy_list_list
      parameters:
      - in: query
        name: city
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - in: query
        name: occupation
        schema:
          type: array
          items:
            type: string
            enum:
            - Full-Time
            - Internship
            - Part-Time
            - Remote
        explode: true
        style: form
      - in: query
        name: salary_max
        schema:
          type: integer
      - in: query
        name: salary_min
        schema:
          type: integer
      - in: query
        name: specialization
        schema:
          type: array
          items:
            type: string
            enum:
            - Gachi Gang
            - IT
        explode: true
        style: form
      tags:
      - vacancy
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Vacancy'
          description: ''
  /api/vacancy/response/list/:
    get:
      operationId: vacancy_response_list_list
      tags:
      - vacancy
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Response'
          description: ''
components:
  schemas:
    City:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        city:
          type: string
          maxLength: 50
        country:
          type: integer
          nullable: true
      required:
      - id
    Client:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        token:
          type: string
          readOnly: true
          maxLength: 255
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        city:
          allOf:
          - $ref: '#/components/schemas/City'
          readOnly: true
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        phone:
          type: string
          pattern: ^\+?77([0124567][0-8]\d{7})$
          maxLength: 12
      required:
      - city
      - email
      - id
      - phone
      - token
    ClientCreate:
      type: object
      properties:
        email:
          type: string
          maxLength: 255
        password:
          type: string
          writeOnly: true
          maxLength: 128
        city:
          type: integer
          nullable: true
        first_name:
          type: string
          maxLength: 50
        last_name:
          type: string
          maxLength: 50
        phone:
          type: string
          maxLength: 50
        token:
          allOf:
          - $ref: '#/components/schemas/Token'
          readOnly: true
      required:
      - email
      - first_name
      - last_name
      - password
      - phone
      - token
    ClientLogin:
      type: object
      properties:
        email:
          type: string
          maxLength: 255
        password:
          type: string
          maxLength: 128
        token:
          allOf:
          - $ref: '#/components/schemas/Token'
          readOnly: true
      required:
      - email
      - password
      - token
    Company:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        token:
          type: string
          readOnly: true
          maxLength: 255
        company_name:
          type: string
          maxLength: 50
        company_description:
          type: string
          maxLength: 500
        city:
          allOf:
          - $ref: '#/components/schemas/City'
          readOnly: true
      required:
      - city
      - company_description
      - company_name
      - id
      - token
    CompanyCreate:
      type: object
      properties:
        email:
          type: string
          maxLength: 255
        password:
          type: string
          writeOnly: true
          maxLength: 128
        city:
          type: integer
          nullable: true
        company_name:
          type: string
          maxLength: 50
        company_description:
          type: string
          maxLength: 500
        token:
          allOf:
          - $ref: '#/components/schemas/Token'
          readOnly: true
      required:
      - company_description
      - company_name
      - email
      - password
      - token
    CompanyLogin:
      type: object
      properties:
        email:
          type: string
          maxLength: 255
        password:
          type: string
          writeOnly: true
          maxLength: 128
      required:
      - email
      - password
    Favorite:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        vacancy:
          allOf:
          - $ref: '#/components/schemas/Vacancy'
          readOnly: true
        client:
          allOf:
          - $ref: '#/components/schemas/Client'
          readOnly: true
      required:
      - client
      - id
      - vacancy
    Logout:
      type: object
      properties:
        refresh:
          type: string
      required:
      - refresh
    OccupationSerialazer:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 50
      required:
      - id
      - name
    PatchedClient:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        token:
          type: string
          readOnly: true
          maxLength: 255
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        city:
          allOf:
          - $ref: '#/components/schemas/City'
          readOnly: true
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        phone:
          type: string
          pattern: ^\+?77([0124567][0-8]\d{7})$
          maxLength: 12
    PatchedCompany:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        token:
          type: string
          readOnly: true
          maxLength: 255
        company_name:
          type: string
          maxLength: 50
        company_description:
          type: string
          maxLength: 500
        city:
          allOf:
          - $ref: '#/components/schemas/City'
          readOnly: true
    PatchedProfile:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        city:
          allOf:
          - $ref: '#/components/schemas/City'
          readOnly: true
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        phone:
          type: string
          pattern: ^\+?77([0124567][0-8]\d{7})$
          maxLength: 12
        cv:
          type: string
          format: uri
          nullable: true
    Profile:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        city:
          allOf:
          - $ref: '#/components/schemas/City'
          readOnly: true
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        phone:
          type: string
          pattern: ^\+?77([0124567][0-8]\d{7})$
          maxLength: 12
        cv:
          type: string
          format: uri
          nullable: true
      required:
      - city
      - email
      - id
      - phone
    Response:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        vacancy:
          allOf:
          - $ref: '#/components/schemas/Vacancy'
          readOnly: true
        client:
          allOf:
          - $ref: '#/components/schemas/Client'
          readOnly: true
        date:
          type: string
          format: date-time
          readOnly: true
      required:
      - client
      - date
      - id
      - vacancy
    Specialization:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        skills:
          type: integer
      required:
      - id
      - name
      - skills
    StatusEnum:
      enum:
      - true
      - false
      type: boolean
    Token:
      type: object
      properties:
        refresh:
          type: string
        access:
          type: string
      required:
      - access
      - refresh
    TokenObtainPair:
      type: object
      properties:
        email:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - email
      - password
      - refresh
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
    Vacancy:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        content:
          type: string
          maxLength: 1000
        city:
          allOf:
          - $ref: '#/components/schemas/City'
          readOnly: true
        salary_min:
          type: integer
        salary_max:
          type: integer
        company:
          allOf:
          - $ref: '#/components/schemas/Company'
          readOnly: true
        company_name:
          type: string
          readOnly: true
        status:
          $ref: '#/components/schemas/StatusEnum'
        occupation:
          $ref: '#/components/schemas/OccupationSerialazer'
        specialization:
          $ref: '#/components/schemas/Specialization'
        id:
          type: integer
          readOnly: true
      required:
      - city
      - company
      - company_name
      - content
      - id
      - name
      - occupation
      - salary_max
      - salary_min
      - specialization
    VacancyCreate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        content:
          type: string
          maxLength: 1000
        salary_max:
          type: integer
        salary_min:
          type: integer
        is_deleted:
          type: boolean
        status:
          $ref: '#/components/schemas/StatusEnum'
        city:
          type: integer
          nullable: true
        company:
          type: integer
          nullable: true
        occupation:
          type: integer
          nullable: true
        specialization:
          type: integer
          nullable: true
      required:
      - content
      - id
      - name
      - salary_max
      - salary_min
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
